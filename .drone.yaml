# Shared node_modules between subsequent tests imposes
# DAG dependencies that are not conducive for multiple
# parallel pipelines; a refined solution must be found.
#
# TODO: Improve Inspection Pipeline:
#  - Additional linters
#  - Security vulnerability scanners
#  - AST optimization checks? (if possible)
# TODO: Build pipeline
# TODO: IaC pipeline
# TODO: Deploy pipeline
# TODO: Regression pipeline
# TODO: Manual promotion pipelines

kind: pipeline
type: docker
name: Inspection & Testing

platform:
  os: linux
  arch: amd64

services:
- name: mongo
  image: mongo:latest

steps:
- name: express
  image: node:latest
  detach: true
  depends_on: ["Install: backend"]
  commands:
    - cd backend/
    - node_modules/.bin/nodemon backend/app.js

- name: "Install: frontend"
  image: node:latest
  depends_on: ["clone"]
  commands:
    - cd frontend && npm install

- name: "Install: backend"
  image: node:latest
  depends_on: ["clone"]
  commands:
    - cd backend && npm install

- name: "Lint: Dockerfiles"
  image: hadolint/hadolint:latest-alpine
  depends_on: [ clone ]
  commands:
    - hadolint ./frontend/Dockerfile ./backend/Dockerfile

- name: "Lint: TypeScript"
  image: node:latest
  depends_on: ["Install: frontend"]
  commands:
    - cd frontend/
    - npx tslint -c tslint.json --project './'

- name: "Unit Tests: backend"
  image: node:latest
  depends_on: ["express"]
  commands:
    - sleep 15
    - cd backend/
    - node_modules/.bin/jasmine

- name: "Unit Tests: frontend"
  image: trion/ng-cli-karma:9.0.6
  depends_on: ["Install: frontend"]
  commands:
    - cd frontend/
    - ng test --progress false --watch false

- name: "e2e Tests: frontend"
  image: trion/ng-cli-e2e:9.0.6
  depends_on: ["Unit Tests: frontend"]
  commands:
    - cd frontend/
    - ./node_modules/protractor/node_modules/webdriver-manager/bin/webdriver-manager update --versions.chrome 2.41
    - ng e2e --webdriver-update=false --protractor-config=e2e/protractor-ci.conf.js

---

kind: pipeline
type: docker
name: Build

platform:
  os: linux
  arch: amd64

depends_on:
  - "Inspection & Testing"

steps:
- name: "Build: backend"
  image: docker
  depends_on: ["clone"]
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD registry.hub.docker.io
      - docker build -t jrcasso/mean-demo-backend:latest -f backend/Dockerfile .
      - docker push jrcasso/mean-demo-backend:latest

- name: "Build: frontend"
  image: docker
  depends_on: ["clone"]
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD registry.hub.docker.io
      - docker build -t jrcasso/mean-demo-frontend:latest -f frontend/Dockerfile .
      - docker push jrcasso/mean-demo-frontend:latest
